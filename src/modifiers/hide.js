/**
 * Modifier used to hide the popper when its reference element is outside of the
 * popper boundaries. It will set an x-hidden attribute which can be used to hide
 * the popper when its reference is out of boundaries.
 * @method
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
export default function hide(data) {
    const refRect = data.offsets.reference;
    const bound = data.boundaries;

    if (
        refRect.bottom < bound.top ||
        refRect.left > bound.right ||
        refRect.top > bound.bottom ||
        refRect.right < bound.left
    ) {
        data.hide = true;
        data.instance.popper.setAttribute('x-out-of-boundaries', '');
    } else {
        data.hide = false;
        data.instance.popper.removeAttribute('x-out-of-boundaries');
    }

    return data;
}
